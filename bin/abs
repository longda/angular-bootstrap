#!/usr/bin/env node

/**
 * Module dependencies.
 */

var exec = require('child_process').exec
  , program = require('commander')
  , mkdirp = require('mkdirp')
  , pkg = require('../package.json')
  , version = pkg.version
  , os = require('os')
  , fs = require('fs');

// CLI

program
  .version(version)
  //.option('-s, --sessions', 'add session support')
  .option('-e, --ejs', 'add ejs engine support (defaults to jade)')
  .option('-J, --jshtml', 'add jshtml engine support (defaults to jade)')
  .option('-H, --hogan', 'add hogan.js engine support')
  .option('-c, --css <engine>', 'add stylesheet <engine> support (less|stylus) (defaults to plain css)')
  .option('-f, --force', 'force on non-empty directory')
  .parse(process.argv);

// Path

var path = program.args.shift() || '.';

// end-of-line code

var eol = 'win32' == os.platform() ? '\r\n' : '\n'

// Template engine

program.template = 'html';
if (program.jade) program.template = 'jade';
if (program.ejs) program.template = 'ejs';
if (program.jshtml) program.template = 'jshtml';
if (program.hogan) program.template = 'hjs';

/**
 * Routes index template.
 */

// var index = [
//     ''
//   , '/*'
//   , ' * GET home page.'
//   , ' */'
//   , ''
//   , 'exports.index = function(req, res){'
//   , '  res.render(\'index\', { title: \'Express\' });'
//   , '};'
// ].join(eol);

/**
 * Routes users template.
 */

// var users = [
//     ''
//   , '/*'
//   , ' * GET users listing.'
//   , ' */'
//   , ''
//   , 'exports.list = function(req, res){'
//   , '  res.send("respond with a resource");'
//   , '};'
// ].join(eol);

/**
 * Html index.
 */
var htmlIndex = [
  '<!doctype html>',
  '<html lang="en" ng-app="myApp">',
  '<head>',
  '  <meta charset="utf-8">',
  '  <title>My AngularJS App</title>',
  '  <link rel="stylesheet" href="css/app.css"/>',
  '</head>',
  '<body>',
  '  <ul class="menu">',
  '    <li><a href="#/view1">view1</a></li>',
  '    <li><a href="#/view2">view2</a></li>',
  '  </ul>',
  '',
  '  <div ng-view></div>',
  '',
  '  <div>Angular seed app: v<span app-version></span></div>',
  '',
  '  <!-- In production use:',
  '  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.0.2/angular.min.js"></script>',
  '  -->',
  '  <script src="lib/angular/angular.js"></script>',
  '  <script src="js/app.js"></script>',
  '  <script src="js/services.js"></script>',
  '  <script src="js/controllers.js"></script>',
  '  <script src="js/filters.js"></script>',
  '  <script src="js/directives.js"></script>',
  '</body>',
  '</html>'
].join(eol);


 /**
 * Html index async.
 */
var htmlIndexAsync = [
  '<!doctype html>',
  '<html lang="en">',
  '<head>',
  '  <meta charset="utf-8">',
  '  <style>',
  '    [ng-cloak] {',
  '      display: none;',
  '    }',
  '  </style>',
  '  <script>',
  '    // include angular loader, which allows the files to load in any order',
  '    /*',
  '     AngularJS v1.0.0rc1',
  '     (c) 2010-2012 AngularJS http://angularjs.org',
  '     License: MIT',
  '    */',
  '    \'use strict\';(function(i){function d(c,a,e){return c[a]||(c[a]=e())}return d(d(i,"angular",Object),"module",function(){var c={};return function(a,e,f){e&&c.hasOwnProperty(a)&&(c[a]=null);return d(c,a,function(){function b(a,b,d){return function(){c[d||"push"]([a,b,arguments]);return g}}if(!e)throw Error("No module: "+a);var c=[],d=[],h=b("$injector","invoke"),g={_invokeQueue:c,_runBlocks:d,requires:e,name:a,provider:b("$provide","provider"),factory:b("$provide","factory"),service:b("$provide","service"),',
  '    value:b("$provide","value"),constant:b("$provide","constant","unshift"),filter:b("$filterProvider","register"),directive:b("$compileProvider","directive"),config:h,run:function(a){d.push(a);return this}};f&&h(f);return g})}})})(window);',
  '    ',
  '    // include a third-party async loader library',
  '    /*!',
  '     * $script.js v1.3',
  '     * https://github.com/ded/script.js',
  '     * Copyright: @ded & @fat - Dustin Diaz, Jacob Thornton 2011',
  '     * Follow our software http://twitter.com/dedfat',
  '     * License: MIT',
  '     */',
  '    !function(a,b,c){function t(a,c){var e=b.createElement("script"),f=j;e.onload=e.onerror=e[o]=function(){e[m]&&!/^c|loade/.test(e[m])||f||(e.onload=e[o]=null,f=1,c())},e.async=1,e.src=a,d.insertBefore(e,d.firstChild)}function q(a,b){p(a,function(a){return!b(a)})}var d=b.getElementsByTagName("head")[0],e={},f={},g={},h={},i="string",j=!1,k="push",l="DOMContentLoaded",m="readyState",n="addEventListener",o="onreadystatechange",p=function(a,b){for(var c=0,d=a.length;c<d;++c)if(!b(a[c]))return j;return 1};!b[m]&&b[n]&&(b[n](l,function r(){b.removeEventListener(l,r,j),b[m]="complete"},j),b[m]="loading");var s=function(a,b,d){function o(){if(!--m){e[l]=1,j&&j();for(var a in g)p(a.split("|"),n)&&!q(g[a],n)&&(g[a]=[])}}function n(a){return a.call?a():e[a]}a=a[k]?a:[a];var i=b&&b.call,j=i?b:d,l=i?a.join(""):b,m=a.length;c(function(){q(a,function(a){h[a]?(l&&(f[l]=1),o()):(h[a]=1,l&&(f[l]=1),t(s.path?s.path+a+".js":a,o))})},0);return s};s.get=t,s.ready=function(a,b,c){a=a[k]?a:[a];var d=[];!q(a,function(a){e[a]||d[k](a)})&&p(a,function(a){return e[a]})?b():!function(a){g[a]=g[a]||[],g[a][k](b),c&&c(d)}(a.join("|"));return s};var u=a.$script;s.noConflict=function(){a.$script=u;return this},typeof module!="undefined"&&module.exports?module.exports=s:a.$script=s}(this,document,setTimeout)',
  '    ',
  '    // load all of the dependencies asynchronously.',
  '    $script([',
  '      \'lib/angular/angular.js\',',
  '      \'js/app.js\',',
  '      \'js/services.js\',',
  '      \'js/controllers.js\',',
  '      \'js/filters.js\',',
  '      \'js/directives.js\'',
  '    ], function() {',
  '      // when all is done, execute bootstrap angular application',
  '      angular.bootstrap(document, [\'myApp\']);',
  '    });',
  '  </script>',
  '  <title>My AngularJS App</title>',
  '  <link rel="stylesheet" href="css/app.css">',
  '</head>',
  '<body>',
  '  <ul class="menu">',
  '    <li><a href="#/view1">view1</a></li>',
  '    <li><a href="#/view2">view2</a></li>',
  '  </ul>',
  '  ',
  '  <div ng-view></div>',
  '  ',
  '  <div>Angular seed app: v<span app-version></span></div>',
  '  ',
  '</body>',
  '</html>'
].join(eol);

/**
* Html partial 1.
*/
var htmlPartial1 = [
  '<p>This is the partial for view 1.</p>'
].join(eol);

/**
* Html partial 2.
*/
var htmlPartial2 = [
  '<p>This is the partial for view 2.</p>',
  '<p>',
  '  Showing of \'interpolate\' filter:',
  '  {{ \'Current version is v%VERSION%.\' | interpolate }}',
  '</p>'
].join(eol);

/**
 * Jade layout template.
 */

var jadeLayout = [
    'doctype 5'
  , 'html'
  , '  head'
  , '    title= title'
  , '    link(rel=\'stylesheet\', href=\'/stylesheets/style.css\')'
  , '  body'
  , '    block content'
].join(eol);

/**
 * Jade index template.
 */

var jadeIndex = [
    'extends layout'
  , ''
  , 'block content'
  , '  h1= title'
  , '  p Welcome to #{title}'
].join(eol);

/**
 * EJS index template.
 */

var ejsIndex = [
    '<!DOCTYPE html>'
  , '<html>'
  , '  <head>'
  , '    <title><%= title %></title>'
  , '    <link rel=\'stylesheet\' href=\'/stylesheets/style.css\' />'
  , '  </head>'
  , '  <body>'
  , '    <h1><%= title %></h1>'
  , '    <p>Welcome to <%= title %></p>'
  , '  </body>'
  , '</html>'
].join(eol);

/**
 * JSHTML layout template.
 */

var jshtmlLayout = [
    '<!DOCTYPE html>'
  , '<html>'
  , '  <head>'
  , '    <title> @write(title) </title>'
  , '    <link rel=\'stylesheet\' href=\'/stylesheets/style.css\' />'
  , '  </head>'
  , '  <body>'
  , '    @write(body)'
  , '  </body>'
  , '</html>'
].join(eol);

/**
 * JSHTML index template.
 */

var jshtmlIndex = [
    '<h1>@write(title)</h1>'
  , '<p>Welcome to @write(title)</p>'
].join(eol);

/**
 * Hogan.js index template.
 */
var hoganIndex = [
    '<!DOCTYPE html>'
  , '<html>'
  , '  <head>'
  , '    <title>{{ title }}</title>'
  , '    <link rel=\'stylesheet\' href=\'/stylesheets/style.css\' />'
  , '  </head>'
  , '  <body>'
  , '    <h1>{{ title }}</h1>'
  , '    <p>Welcome to {{ title }}</p>'
  , '  </body>'
  , '</html>'
].join(eol);

/**
 * Default css template.
 */

var css = [
  //   'body {'
  // , '  padding: 50px;'
  // , '  font: 14px "Lucida Grande", Helvetica, Arial, sans-serif;'
  // , '}'
  // , ''
  // , 'a {'
  // , '  color: #00B7FF;'
  // , '}'
  '/* app css stylesheet */',
  '',
  '.menu {',
  '  list-style: none;',
  '  border-bottom: 0.1em solid black;',
  '  margin-bottom: 2em;',
  '  padding: 0 0 0.5em;',
  '}',
  '',
  '.menu:before {',
  '  content: "[";',
  '}',
  '',
  '.menu:after {',
  '  content: "]";',
  '}',
  '',
  '.menu > li {',
  '  display: inline;',
  '}',
  '',
  '.menu > li:before {',
  '  content: "|";',
  '  padding-right: 0.3em;',
  '}',
  '',
  '.menu > li:nth-child(1):before {',
  '  content: "";',
  '  padding: 0;',
  '}',
].join(eol);

/**
 * Default less template.
 */

var less = [
    'body {'
  , '  padding: 50px;'
  , '  font: 14px "Lucida Grande", Helvetica, Arial, sans-serif;'
  , '}'
  , ''
  , 'a {'
  , '  color: #00B7FF;'
  , '}'
].join(eol);

/**
 * Default stylus template.
 */

var stylus = [
    'body'
  , '  padding: 50px'
  , '  font: 14px "Lucida Grande", Helvetica, Arial, sans-serif'
  , 'a'
  , '  color: #00B7FF'
].join(eol);

/**
 * App template.
 */

// var app = [
//     ''
//   , '/**'
//   , ' * Module dependencies.'
//   , ' */'
//   , ''
//   , 'var express = require(\'express\')'
//   , '  , routes = require(\'./routes\')'
//   , '  , user = require(\'./routes/user\')'
//   , '  , http = require(\'http\')'
//   , '  , path = require(\'path\');'
//   , ''
//   , 'var app = express();'
//   , ''
//   , 'app.configure(function(){'
//   , '  app.set(\'port\', process.env.PORT || 3000);'
//   , '  app.set(\'views\', __dirname + \'/views\');'
//   , '  app.set(\'view engine\', \':TEMPLATE\');'
//   , '  app.use(express.favicon());'
//   , '  app.use(express.logger(\'dev\'));'
//   , '  app.use(express.bodyParser());'
//   , '  app.use(express.methodOverride());{sess}'
//   , '  app.use(app.router);{css}'
//   , '  app.use(express.static(path.join(__dirname, \'public\')));'
//   , '});'
//   , ''
//   , 'app.configure(\'development\', function(){'
//   , '  app.use(express.errorHandler());'
//   , '});'
//   , ''
//   , 'app.get(\'/\', routes.index);'
//   , 'app.get(\'/users\', user.list);'
//   , ''
//   , 'http.createServer(app).listen(app.get(\'port\'), function(){'
//   , '  console.log("Express server listening on port " + app.get(\'port\'));'
//   , '});'
//   , ''
// ].join(eol);

// Generate application

(function createApplication(path) {
  emptyDirectory(path, function(empty){
    if (empty || program.force) {
      createApplicationAt(path);
    } else {
      program.confirm('destination is not empty, continue? ', function(ok){
        if (ok) {
          process.stdin.destroy();
          createApplicationAt(path);
        } else {
          abort('aborting');
        }
      });
    }
  });
})(path);

/**
 * Create application at the given directory `path`.
 *
 * @param {String} path
 */

function createApplicationAt(path) {
  console.log();
  process.on('exit', function(){
    console.log();
    console.log('   install dependencies:');
    console.log('     $ cd %s && npm install', path);
    console.log();
    console.log('   run the app:');
    console.log('     $ node app');
    console.log();
  });

  mkdir(path, function(){
    mkdir(path + '/app');
    mkdir(path + '/app/js');
    mkdir(path + '/app/img');
    mkdir(path + '/app/lib');
    mkdir(path + '/app/css', function(){
      switch (program.css) {
        case 'less':
          write(path + '/app/css/style.less', less);
          break;
        case 'stylus':
          write(path + '/app/css/style.styl', stylus);
          break;
        default:
          write(path + '/app/css/style.css', css);
      }
    });

    // mkdir(path + '/routes', function(){
    //   write(path + '/routes/index.js', index);
    //   write(path + '/routes/user.js', users);
    // });

    mkdir(path + '/app/partials', function(){
      switch (program.template) {
        case 'ejs':
          write(path + '/app/partials/index.ejs', ejsIndex);
          break;

        case 'html':
          write(path + '/app/index.html', htmlIndex);
          write(path + '/app/index-async.html', htmlIndexAsync);
          write(path + '/app/partials/partial1.html', htmlPartial1);
          write(path + '/app/partials/partial2.html', htmlPartial2);
          break;

        case 'jade':
          write(path + '/app/partials/layout.jade', jadeLayout);
          write(path + '/app/partials/index.jade', jadeIndex);
          break;

        case 'jshtml':
          write(path + '/app/partials/layout.jshtml', jshtmlLayout);
          write(path + '/app/partials/index.jshtml', jshtmlIndex);
          break;

        case 'hjs':
          write(path + '/app/partials/index.hjs', hoganIndex);
          break;
     }
    });

    // CSS Engine support
    // switch (program.css) {
    //   case 'less':
    //     app = app.replace('{css}', eol + '  app.use(require(\'less-middleware\')({ src: __dirname + \'/public\' }));');
    //     break;
    //   case 'stylus':
    //     app = app.replace('{css}', eol + '  app.use(require(\'stylus\').middleware(__dirname + \'/public\'));');
    //     break;
    //   default:
    //     app = app.replace('{css}', '');
    // }

    // Session support
    // app = app.replace('{sess}', program.sessions
    //   ? eol + '  app.use(express.cookieParser(\'your secret here\'));' + eol + '  app.use(express.session());'
    //   : '');

    // Template support
    //app = app.replace(':TEMPLATE', program.template);

    // package.json
    // var pkg = {
    //     name: 'application-name'
    //   , version: '0.0.1'
    //   , private: true
    //   , scripts: { start: 'node app' }
    //   , dependencies: {
    //     express: version
    //   }
    // }

    //if (program.template) pkg.dependencies[program.template] = '*';

    // CSS Engine support
    switch (program.css) {
      case 'less':
        pkg.dependencies['less-middleware'] = '*';
        break;
      default:
        if (program.css) {
          pkg.dependencies[program.css] = '*';
        }
    }

    //write(path + '/package.json', JSON.stringify(pkg, null, 2));
    //write(path + '/app.js', app);
    // write(path + '/app/index-async.html', '');
    // write(path + '/app/index.html', '');
  });
}

/**
 * Check if the given directory `path` is empty.
 *
 * @param {String} path
 * @param {Function} fn
 */

function emptyDirectory(path, fn) {
  fs.readdir(path, function(err, files){
    if (err && 'ENOENT' != err.code) throw err;
    fn(!files || !files.length);
  });
}

/**
 * echo str > path.
 *
 * @param {String} path
 * @param {String} str
 */

function write(path, str) {
  fs.writeFile(path, str);
  console.log('   \x1b[36mcreate\x1b[0m : ' + path);
}

/**
 * Mkdir -p.
 *
 * @param {String} path
 * @param {Function} fn
 */

function mkdir(path, fn) {
  mkdirp(path, 0755, function(err){
    if (err) throw err;
    console.log('   \033[36mcreate\033[0m : ' + path);
    fn && fn();
  });
}

/**
 * Exit with the given `str`.
 *
 * @param {String} str
 */

function abort(str) {
  console.error(str);
  process.exit(1);
}
